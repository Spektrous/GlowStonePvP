package me.spektrous.Listener;

import java.util.List;

import me.spektrous.GlowStonePvP;

import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.entity.EntityDamageByEntityEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;

public class UseTools implements Listener {
	public GlowStonePvP plugin = GlowStonePvP.getInstance();
	public List<String> noWear = plugin.ulist;
	public List<String> noDWear = plugin.list;

	@SuppressWarnings("deprecation")
	@EventHandler
	public void onUse(PlayerInteractEvent e) {
		final Player player = (Player) e.getPlayer();
		if (!player.getWorld().getName().equals("world")) {
			return;
		}
		if (e.getAction() == Action.RIGHT_CLICK_AIR
				|| e.getAction() == Action.RIGHT_CLICK_BLOCK
				|| e.getAction() == Action.LEFT_CLICK_AIR
				|| e.getAction() == Action.LEFT_CLICK_BLOCK) {
			if (!player.hasPermission("armor.wear")) {
				if (noDWear.contains(getDisplayName(player.getItemInHand()))) {
					e.setCancelled(true);
					if (!(player.getItemInHand() == null)) {
						player.getItemInHand().setDurability((short) 0);
					}
					player.updateInventory();
				}
			}
			if (!player.hasPermission(plugin.getConfig().getString(
					"UltimateArmorPermission"))) {
				if (noWear.contains(getDisplayName(player.getItemInHand()))) {
					e.setCancelled(true);
					player.sendMessage("§cOnly ultimate can use these items!");
					;
					if (!(player.getItemInHand() == null)) {
						player.getItemInHand().setDurability((short) 0);
					}
					player.updateInventory();
				}
			}
		}
	}

	@SuppressWarnings("deprecation")
	@EventHandler
	public void onHit(EntityDamageByEntityEvent e) {
		if (!e.getDamager().getWorld().getName().equals("world")) {
			return;
		}
		if (!(e.getDamager() instanceof Player)) {
			return;
		}
		Player damager = (Player) e.getDamager();
		if (!damager.hasPermission(plugin.getConfig().getString(
				"UltimateArmorPermission"))) {
			if (noWear.contains(getDisplayName(damager.getItemInHand()))) {
				e.setCancelled(true);
				if (!(damager.getItemInHand() == null)) {
					damager.getItemInHand().setDurability((short) 0);
					damager.updateInventory();
				}
				damager.updateInventory();
			}
		}
		if (!damager.hasPermission("armor.wear")) {
			if (noDWear.contains(getDisplayName(damager.getItemInHand()))) {
				e.setCancelled(true);
				if (!(damager.getItemInHand() == null)) {
					damager.getItemInHand().setDurability((short) 0);
				}
				damager.updateInventory();
			}
		}
	}

	public static String getDisplayName(ItemStack item) {
		String name;
		try {
			name = item.getItemMeta().getDisplayName();
		} catch (Exception e) {
			name = "";
		}
		if ((name != null) && (name.contains("§"))) {
			name = name.substring(2);
		}
		return name;
	}
}
